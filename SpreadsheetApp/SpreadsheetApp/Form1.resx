<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>